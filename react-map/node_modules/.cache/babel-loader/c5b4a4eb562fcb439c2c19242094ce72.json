{"ast":null,"code":"import _toConsumableArray from \"D:\\\\localhost\\\\latian\\\\webdev\\\\react-map\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:\\\\localhost\\\\latian\\\\webdev\\\\react-map\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\localhost\\\\latian\\\\webdev\\\\react-map\\\\src\\\\components\\\\App.jsx\";\nimport React from \"react\";\nimport Term from \"./Term\"; // import emojipedia from '../emojipedia';\n// const createContent = (emojis) => {\n//   return(\n//     <Term \n//       key={emojis.id}\n//       emoji={emojis.emoji}\n//       name={emojis.name}\n//       description={emojis.meaning}\n//     />\n//   )\n// }\n// function App() {\n//   return (\n//     <div>\n//       <h1>\n//         <span>emojipedia</span>\n//       </h1>\n//       <dl className=\"dictionary\">\n//       {emojipedia.map(createContent)}\n//       </dl>\n//     </div>\n//   );\n// }\n// todo list\n\nfunction App() {\n  var _this = this;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputText = _useState2[0],\n      setInputText = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      items = _useState4[0],\n      setItems = _useState4[1];\n\n  function handleInput(e) {\n    var newValue = e.target.value;\n    setInputText(newValue);\n    console.log(newValue);\n  }\n\n  function handleSubmit() {\n    setItems(function (prevItems) {\n      return [].concat(_toConsumableArray(prevItems), [inputText]);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"To-Do List\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: handleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Add\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, items.map(function (todoItem) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, todoItem);\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/localhost/latian/webdev/react-map/src/components/App.jsx"],"names":["React","Term","App","useState","inputText","setInputText","items","setItems","handleInput","e","newValue","target","value","console","log","handleSubmit","prevItems","map","todoItem"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAAA,kBAEqBC,QAAQ,CAAC,EAAD,CAF7B;AAAA;AAAA,MAENC,SAFM;AAAA,MAEKC,YAFL;;AAAA,mBAGaF,QAAQ,CAAC,EAAD,CAHrB;AAAA;AAAA,MAGNG,KAHM;AAAA,MAGCC,QAHD;;AAKb,WAASC,WAAT,CAAqBC,CAArB,EAAwB;AACtB,QAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASC,KAA1B;AACAP,IAAAA,YAAY,CAACK,QAAD,CAAZ;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACD;;AAED,WAASK,YAAT,GAAuB;AACrBR,IAAAA,QAAQ,CAAC,UAAAS,SAAS,EAAI;AACpB,0CACKA,SADL,IAEEZ,SAFF;AAID,KALO,CAAR;AAMD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAEI,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEO,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CAFF,CAJF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,KAAK,CAACW,GAAN,CAAU,UAAAC,QAAQ;AAAA,wBACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,QAAL,CADmB;AAAA,GAAlB,CADH,CADF,CAVF,CADF;AAoBD;;AAED,eAAehB,GAAf","sourcesContent":["import React from \"react\";\nimport Term from \"./Term\";\n// import emojipedia from '../emojipedia';\n\n// const createContent = (emojis) => {\n//   return(\n//     <Term \n//       key={emojis.id}\n//       emoji={emojis.emoji}\n//       name={emojis.name}\n//       description={emojis.meaning}\n//     />\n//   )\n// }\n\n// function App() {\n//   return (\n//     <div>\n//       <h1>\n//         <span>emojipedia</span>\n//       </h1>\n//       <dl className=\"dictionary\">\n//       {emojipedia.map(createContent)}\n//       </dl>\n//     </div>\n//   );\n// }\n\n// todo list\n\nfunction App() {\n\n  const [inputText, setInputText] = useState(\"\");\n  const [items, setItems] = useState([]);\n  \n  function handleInput(e) {\n    const newValue = e.target.value;\n    setInputText(newValue);\n    console.log(newValue);\n  }\n\n  function handleSubmit(){\n    setItems(prevItems => {\n      return [\n        ...prevItems,\n        inputText\n      ]\n    })\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>To-Do List</h1>\n      </div>\n      <div className=\"form\">\n        <input type=\"text\" onChange={handleInput} />\n        <button type=\"submit\" onClick={handleSubmit}>\n          <span>Add</span>\n        </button>\n      </div>\n      <div>\n        <ul>\n          {items.map(todoItem => (\n          <li>{todoItem}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}